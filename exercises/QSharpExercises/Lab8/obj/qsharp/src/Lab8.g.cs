//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":42}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" In this exercise, you must implement the Quantum Fourier Transform\",\" circuit. This will perform an in-place transformation of the\",\" amplitudes of each state in the superposition from the\",\" value-versus-time to the value-versus-frequency domain.\",\"\",\" # Input\",\" ## register\",\" A register containing qubits in superposition.\",\" The superposition is unknown, and the amplitudes are not guaranteed to\",\" be uniform.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":54},\"Item2\":{\"Line\":1,\"Column\":63}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Lab8.Exercise1\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":54},\"Item2\":{\"Line\":1,\"Column\":63}},\"Documentation\":[\"automatically generated QsControlled specialization for Lab8.Exercise1\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":54},\"Item2\":{\"Line\":1,\"Column\":63}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Lab8.Exercise1\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Lab8\",\"Name\":\"CRA\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"ctrl\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":15},\"Item2\":{\"Line\":1,\"Column\":19}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"a\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":29}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Double\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"CRA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"CRA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Lab8.CRA\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"CRA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsControlled specialization for Lab8.CRA\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"CRA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":72}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Lab8.CRA\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Lab8\",\"Name\":\"myQFT\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":36}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":25}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"myQFT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"myQFT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":48},\"Item2\":{\"Line\":1,\"Column\":57}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Lab8.myQFT\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"myQFT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":48},\"Item2\":{\"Line\":1,\"Column\":57}},\"Documentation\":[\"automatically generated QsControlled specialization for Lab8.myQFT\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"myQFT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":48},\"Item2\":{\"Line\":1,\"Column\":57}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Lab8.myQFT\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":72,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"register\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":2,\"Column\":20},\"Item2\":{\"Line\":2,\"Column\":29}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":17}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"sampleRate\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Arithmetic\",\"Name\":\"BigEndian\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"Double\"}]]},\"ReturnType\":{\"Case\":\"Double\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" In this exercise, you are given a quantum register in an unknown\",\" superposition. In this superposition, a single sine wave has been\",\" encoded into the amplitudes of each term in the superposition.\",\"\",\" For example: the first sample of the wave will be the amplitude of the\",\" |0> term, the second sample of the wave will be the amplitude of the\",\" |1> term, the third will be the amplitude of the |2> term, and so on.\",\"\",\" Your goal is to find the frequency of these samples, and return that\",\" frequency.\",\"\",\" # Input\",\" ## register\",\" The register which contains the samples of the sine wave in the\",\" amplitudes of  its terms.\",\"\",\" ## sampleRate\",\" The number of samples per second that were used to collect the\",\" original samples. You will need this to retrieve the correct\",\" frequency.\",\"\",\" # Output\",\" The frequency of the sine wave.\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Lab8\",\"Name\":\"Exercise2\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\BWSI\\\\Exercises\\\\exercises\\\\QSharpExercises\\\\Lab8\\\\Lab8.qs\",\"Position\":{\"Item1\":72,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
#line hidden
namespace Lab8
{
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Body, 25, 35)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Adjoint, 25, 35)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Controlled, 25, 35)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.ControlledAdjoint, 25, 35)]
    public partial class Exercise1 : Unitary<Microsoft.Quantum.Arithmetic.BigEndian>, ICallable
    {
        public Exercise1(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Exercise1";
        String ICallable.FullName => "Lab8.Exercise1";
        protected IUnitary<Microsoft.Quantum.Arithmetic.BigEndian> myQFT__
        {
            get;
            set;
        }

        public override Func<Microsoft.Quantum.Arithmetic.BigEndian, QVoid> __Body__ => (__in__) =>
        {
            var register = __in__;
#line 31 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            myQFT__.Apply(register);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<Microsoft.Quantum.Arithmetic.BigEndian, QVoid> __AdjointBody__ => (__in__) =>
        {
            var register = __in__;
#line 25 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            myQFT__.Adjoint.Apply(register);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Microsoft.Quantum.Arithmetic.BigEndian), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,register) = __in__;
#line 25 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            myQFT__.Controlled.Apply((__controlQubits__, register));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Microsoft.Quantum.Arithmetic.BigEndian), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,register) = __in__;
#line 25 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            myQFT__.Adjoint.Controlled.Apply((__controlQubits__, register));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.myQFT__ = this.__Factory__.Get<IUnitary<Microsoft.Quantum.Arithmetic.BigEndian>>(typeof(myQFT));
        }

        public override IApplyData __DataIn__(Microsoft.Quantum.Arithmetic.BigEndian data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.BigEndian register)
        {
            return __m__.Run<Exercise1, Microsoft.Quantum.Arithmetic.BigEndian, QVoid>(register);
        }
    }

    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Body, 35, 38)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Adjoint, 35, 38)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Controlled, 35, 38)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.ControlledAdjoint, 35, 38)]
    public partial class CRA : Unitary<(Qubit,Double,Qubit)>, ICallable
    {
        public CRA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Double,Qubit)>, IApplyData
        {
            public In((Qubit,Double,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item3;
                }
            }
        }

        String ICallable.Name => "CRA";
        String ICallable.FullName => "Lab8.CRA";
        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__R1
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        public override Func<(Qubit,Double,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (ctrl,a,qubit) = __in__;
#line 36 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Intrinsic__R1.Controlled.Apply((new QArray<Qubit>(ctrl), (((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) / 2D.Pow(a)), qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Qubit,Double,Qubit), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (ctrl,a,qubit) = __in__;
#line 35 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Intrinsic__R1.Controlled.Adjoint.Apply((new QArray<Qubit>(ctrl), (((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) / 2D.Pow(a)), qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,Double,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(ctrl,a,qubit)) = __in__;
#line 35 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Intrinsic__R1.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(ctrl), (((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) / 2D.Pow(a)), qubit))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,Double,Qubit)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(ctrl,a,qubit)) = __in__;
#line 35 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Intrinsic__R1.Controlled.Adjoint.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(ctrl), (((2D * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) / 2D.Pow(a)), qubit))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__R1 = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.R1));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
        }

        public override IApplyData __DataIn__((Qubit,Double,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit ctrl, Double a, Qubit qubit)
        {
            return __m__.Run<CRA, (Qubit,Double,Qubit), QVoid>((ctrl, a, qubit));
        }
    }

    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Body, 38, 73)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Adjoint, 38, 73)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Controlled, 38, 73)]
    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.ControlledAdjoint, 38, 73)]
    public partial class myQFT : Unitary<Microsoft.Quantum.Arithmetic.BigEndian>, ICallable
    {
        public myQFT(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "myQFT";
        String ICallable.FullName => "Lab8.myQFT";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Double,Qubit)> CRA__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected IUnitary<IQArray<Qubit>> Microsoft__Quantum__Canon__SwapReverseRegister
        {
            get;
            set;
        }

        protected ICallable<QRange, QRange> RangeReverse__
        {
            get;
            set;
        }

        public override Func<Microsoft.Quantum.Arithmetic.BigEndian, QVoid> __Body__ => (__in__) =>
        {
            var register = __in__;
#line 39 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            foreach (var j in new QRange(0L, (register.Data.Length - 1L)))
#line hidden
            {
#line 40 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                Microsoft__Quantum__Intrinsic__H.Apply(register.Data[j]);
#line 41 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                foreach (var i in new QRange((j + 1L), (register.Data.Length - 1L)))
#line hidden
                {
#line 42 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    var A = ((i - j) + 1L);
#line 43 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    CRA__.Apply((register.Data[j], Microsoft__Quantum__Convert__IntAsDouble.Apply(A), register.Data[i]));
                }
            }

#line 46 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Canon__SwapReverseRegister.Apply(register.Data);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<Microsoft.Quantum.Arithmetic.BigEndian, QVoid> __AdjointBody__ => (__in__) =>
        {
            var register = __in__;
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Canon__SwapReverseRegister.Adjoint.Apply(register.Data);
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            foreach (var __qsVar0__j__ in RangeReverse__.Apply(new QRange(0L, (register.Data.Length - 1L))))
#line hidden
            {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                foreach (var __qsVar1__i__ in RangeReverse__.Apply(new QRange((__qsVar0__j__ + 1L), (register.Data.Length - 1L))))
#line hidden
                {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    var __qsVar2__A__ = ((__qsVar1__i__ - __qsVar0__j__) + 1L);
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    CRA__.Adjoint.Apply((register.Data[__qsVar0__j__], Microsoft__Quantum__Convert__IntAsDouble.Apply(__qsVar2__A__), register.Data[__qsVar1__i__]));
                }

#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(register.Data[__qsVar0__j__]);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Microsoft.Quantum.Arithmetic.BigEndian), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,register) = __in__;
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            foreach (var j in new QRange(0L, (register.Data.Length - 1L)))
#line hidden
            {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                Microsoft__Quantum__Intrinsic__H.Controlled.Apply((__controlQubits__, register.Data[j]));
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                foreach (var i in new QRange((j + 1L), (register.Data.Length - 1L)))
#line hidden
                {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    var A = ((i - j) + 1L);
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    CRA__.Controlled.Apply((__controlQubits__, (register.Data[j], Microsoft__Quantum__Convert__IntAsDouble.Apply(A), register.Data[i])));
                }
            }

#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Canon__SwapReverseRegister.Controlled.Apply((__controlQubits__, register.Data));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Microsoft.Quantum.Arithmetic.BigEndian), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,register) = __in__;
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Microsoft__Quantum__Canon__SwapReverseRegister.Adjoint.Controlled.Apply((__controlQubits__, register.Data));
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            foreach (var __qsVar0__j__ in RangeReverse__.Apply(new QRange(0L, (register.Data.Length - 1L))))
#line hidden
            {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                foreach (var __qsVar1__i__ in RangeReverse__.Apply(new QRange((__qsVar0__j__ + 1L), (register.Data.Length - 1L))))
#line hidden
                {
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    var __qsVar2__A__ = ((__qsVar1__i__ - __qsVar0__j__) + 1L);
#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                    CRA__.Adjoint.Controlled.Apply((__controlQubits__, (register.Data[__qsVar0__j__], Microsoft__Quantum__Convert__IntAsDouble.Apply(__qsVar2__A__), register.Data[__qsVar1__i__])));
                }

#line 38 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                Microsoft__Quantum__Intrinsic__H.Adjoint.Controlled.Apply((__controlQubits__, register.Data[__qsVar0__j__]));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.CRA__ = this.__Factory__.Get<IUnitary<(Qubit,Double,Qubit)>>(typeof(CRA));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.Microsoft__Quantum__Canon__SwapReverseRegister = this.__Factory__.Get<IUnitary<IQArray<Qubit>>>(typeof(global::Microsoft.Quantum.Canon.SwapReverseRegister));
            this.RangeReverse__ = this.__Factory__.Get<ICallable<QRange, QRange>>(typeof(global::Microsoft.Quantum.Core.RangeReverse));
        }

        public override IApplyData __DataIn__(Microsoft.Quantum.Arithmetic.BigEndian data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.BigEndian register)
        {
            return __m__.Run<myQFT, Microsoft.Quantum.Arithmetic.BigEndian, QVoid>(register);
        }
    }

    [SourceLocation("D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs", OperationFunctor.Body, 73, -1)]
    public partial class Exercise2 : Operation<(Microsoft.Quantum.Arithmetic.BigEndian,Double), Double>, ICallable
    {
        public Exercise2(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Microsoft.Quantum.Arithmetic.BigEndian,Double)>, IApplyData
        {
            public In((Microsoft.Quantum.Arithmetic.BigEndian,Double) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1?.Data)?.Qubits;
                }
            }
        }

        String ICallable.Name => "Exercise2";
        String ICallable.FullName => "Lab8.Exercise2";
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected IUnitary<Microsoft.Quantum.Arithmetic.BigEndian> myQFT__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<(Microsoft.Quantum.Arithmetic.BigEndian,Double), Double> __Body__ => (__in__) =>
        {
            var (register,sampleRate) = __in__;
#line 77 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            Message__.Apply(String.Format("Starting test with SampleRate {0}", sampleRate));
#line 78 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            myQFT__.Adjoint.Apply(register);
#line 80 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            var length = register.Data.Length;
#line 81 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            var sampleSize = 2L.Pow(length);
#line 83 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            var output = 0L;
#line 86 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            foreach (var i in new QRange(0L, (length - 1L)))
#line hidden
            {
#line 87 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                var value = ((Microsoft__Quantum__Intrinsic__M.Apply(register.Data[i]) == Result.One) ? 1L : 0L);
#line 88 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                output = (output + (2L.Pow(((length - 1L) - i)) * value));
            }

#line 91 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            if ((output > (sampleSize / 2L)))
            {
#line 92 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
                output = (sampleSize - output);
            }

#line 95 "D:\\BWSI\\Exercises\\exercises\\QSharpExercises\\Lab8\\Lab8.qs"
            return ((Microsoft__Quantum__Convert__IntAsDouble.Apply(output) * sampleRate) / Microsoft__Quantum__Convert__IntAsDouble.Apply(sampleSize));
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.myQFT__ = this.__Factory__.Get<IUnitary<Microsoft.Quantum.Arithmetic.BigEndian>>(typeof(myQFT));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__((Microsoft.Quantum.Arithmetic.BigEndian,Double) data) => new In(data);
        public override IApplyData __DataOut__(Double data) => new QTuple<Double>(data);
        public static System.Threading.Tasks.Task<Double> Run(IOperationFactory __m__, Microsoft.Quantum.Arithmetic.BigEndian register, Double sampleRate)
        {
            return __m__.Run<Exercise2, (Microsoft.Quantum.Arithmetic.BigEndian,Double), Double>((register, sampleRate));
        }
    }
}